#ifndef INCLUDED_CLANGMETATOOL_PROPAGATION_STRONGLY_CONNECTED_BLOCKS_H
#define INCLUDED_CLANGMETATOOL_PROPAGATION_STRONGLY_CONNECTED_BLOCKS_H

#include <clang/Analysis/CFG.h>

namespace clangmetatool {
namespace propagation {

/**
 * Forward declaration to implementation details of the strongly connected
 * blocks detector.
 */
class StronglyConnectedBlocksImpl;

/**
 * Detector to determine strongly connected blocks within the CFG.
 */
class StronglyConnectedBlocks {
private:
  /**
   * Pointer to implementation.
   */
  StronglyConnectedBlocksImpl *impl;

  StronglyConnectedBlocks(const StronglyConnectedBlocks &) = delete;
  StronglyConnectedBlocks &operator=(const StronglyConnectedBlocks &) = delete;

public:
  /**
   * Explicit constructor to allow for implementation details.
   *    - cfg is a pointer to an instance of the control flow graph for
   *      a function as generated by clang
   */
  StronglyConnectedBlocks(const clang::CFG *cfg);

  /**
   * Explicit destructor.
   */
  ~StronglyConnectedBlocks();

  /**
   * Determine which loop a block is in. Return 0 if the
   * block is not in any loop.
   */
  unsigned getLoop(const clang::CFGBlock *block) const;

  /**
   * Check to see if two blocks are in a the same strongly connected
   * component (i.e. they are in a loop)
   */
  bool inALoop(const clang::CFGBlock *b1, const clang::CFGBlock *b2) const;
};

} // namespace propagation
} // namespace clangmetatool

#endif // INCLUDED_CLANGMETATOOL_PROPAGATION_STRONGLY_CONNECTED_BLOCKS_H

// ----------------------------------------------------------------------------
// Copyright 2018 Bloomberg Finance L.P.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ----------------------------- END-OF-FILE ----------------------------------
